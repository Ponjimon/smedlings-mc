name: Destroying infrastructure

on:
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    shell: bash
    working-directory: .

env:
  TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
  TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  TF_VAR_cloudflare_email: ${{ secrets.CLOUDFLARE_EMAIL }}
  TF_VAR_cloudflare_token: ${{ secrets.CLOUDFLARE_TOKEN }}
  TF_VAR_cloudflare_service_token_id: ${{ secrets.CLOUDFLARE_SERVICE_TOKEN_ID }}
  TF_VAR_cloudflare_access_group_id: ${{ secrets.CLOUDFLARE_ACCESS_GROUP_ID }}
  TF_VAR_webhook_url: ${{ secrets.WEBHOOK_URL }}
  TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN }}
  TF_VAR_hostname: ${{ secrets.HOSTNAME }}
  TF_VAR_location: ${{ vars.LOCATION }}
  TF_VAR_server_type: ${{ vars.SERVER_TYPE }}
  TF_VAR_image: ${{ vars.IMAGE }}
  TF_VAR_repository_name: ${{ github.event.repository.name }}
  TF_VAR_github_token: ${{ secrets.GHUB_TOKEN }}

  AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_KEY }}

jobs:
  setup:
    name: Obtaining repository
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || github.ref == 'refs/heads/develop' && 'development' }}
    steps:
      - name: Use repository
        uses: actions/checkout@v3

      - name: Upload repository
        uses: actions/upload-artifact@v3
        with:
          name: repository
          path: |
            ${{ github.workspace }}/terraform

  destroy:
    name: Destroying infrastructure
    needs: [setup]
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref == 'refs/heads/main' && 'production' || github.ref == 'refs/heads/develop' && 'development' }}
    steps:
      - name: Download repository
        uses: actions/download-artifact@v3
        with:
          name: repository

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform fmt
        run: terraform fmt -check

      - name: Terraform init
        run: terraform init -reconfigure -backend-config="region=auto" -backend-config="bucket=${{ secrets.R2_BUCKET}}" -backend-config="endpoint=${{ secrets.R2_ENDPOINT }}" -backend-config="key=terraform.tfstate" -backend-config="skip_credentials_validation=true" -backend-config="skip_region_validation=true" -backend-config="skip_metadata_api_check=true"

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan -destroy

      - name: Terraform destroy
        run: terraform destroy -auto-approve